// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Myplace.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyPlace.Migrations
{
    [DbContext(typeof(MyPlaceDbContext))]
    [Migration("20211119140339_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyPlace.Negocios.Endereco", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("bairro")
                        .HasColumnType("text");

                    b.Property<string>("cep")
                        .HasColumnType("text");

                    b.Property<string>("cidade")
                        .HasColumnType("text");

                    b.Property<string>("complemento")
                        .HasColumnType("text");

                    b.Property<string>("estado")
                        .HasColumnType("text");

                    b.Property<Guid>("fornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("logradouro")
                        .HasColumnType("text");

                    b.Property<string>("numero")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("fornecedorId")
                        .IsUnique();

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("MyPlace.Negocios.Fornecedor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("documento")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int>("tipoFornecedor")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("fornecedores");
                });

            modelBuilder.Entity("MyPlace.Negocios.Produto", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.Property<Guid>("fornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("img")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<decimal>("valor")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("fornecedorId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("MyPlace.Negocios.Endereco", b =>
                {
                    b.HasOne("MyPlace.Negocios.Fornecedor", null)
                        .WithOne("endereco")
                        .HasForeignKey("MyPlace.Negocios.Endereco", "fornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyPlace.Negocios.Produto", b =>
                {
                    b.HasOne("MyPlace.Negocios.Fornecedor", "fornecedor")
                        .WithMany("produtos")
                        .HasForeignKey("fornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fornecedor");
                });

            modelBuilder.Entity("MyPlace.Negocios.Fornecedor", b =>
                {
                    b.Navigation("endereco");

                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
